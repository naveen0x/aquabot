install

sudo apt-get update
sudo apt-get install subversion libjpeg62-turbo-dev imagemagick libv4l-dev cmake
git clone https://github.com/jacksonliam/mjpg-streamer.git
cd mjpg-streamer/mjpg-streamer-experimental
make


bash

# For the first webcam, let's assume it's on /dev/video0 and stream on port 8080
./mjpg_streamer -i "./input_uvc.so -d /dev/video0 -y" -o "./output_http.so -p 8080"

# For the second webcam, let's assume it's on /dev/video1 and stream on port 8081
./mjpg_streamer -i "./input_uvc.so -d /dev/video1 -y" -o "./output_http.so -p 8081"


/home/submarine/mjpg-streamer/mjpg-streamer-experimental/mjpg_streamer -i "/home/submarine/mjpg-streamer/mjpg-streamer-experimental/input_uvc.so -d /dev/video2 -y -x 640 -y 480 -fps 18 -q 50" -o "/home/submarine/mjpg-streamer/mjpg-streamer-experimental/output_http.so -p 8081"


stream_url_1 = 'http://raspberrypi_ip:8080/?action=stream'
stream_url_2 = 'http://raspberrypi_ip:8081/?action=stream'

The following parameters can be passed to this plugin:

 [-d | --device ].......: video device to open (your camera)
 [-r | --resolution ]...: the resolution of the video device,
                          can be one of the following strings:
                          QQVGA QCIF CGA QVGA CIF PAL 
                          VGA SVGA XGA HD SXGA UXGA 
                          FHD 
                          or a custom value like the following
                          example: 640x480
 [-f | --fps ]..........: frames per second
                          (camera may coerce to different value)
 [-q | --quality ] .....: set quality of JPEG encoding
 [-m | --minimum_size ].: drop frames smaller then this limit, useful
                          if the webcam produces small-sized garbage frames
                          may happen under low light conditions
 [-e | --every_frame ]..: drop all frames except numbered
 [-n | --no_dynctrl ]...: do not initalize dynctrls of Linux-UVC driver
 [-l | --led ]..........: switch the LED "on", "off", let it "blink" or leave
                          it up to the driver using the value "auto"
 [-t | --tvnorm ] ......: set TV-Norm pal, ntsc or secam
 [-u | --uyvy ] ........: Use UYVY format, default: MJPEG (uses more cpu power)
 [-y | --yuv  ] ........: Use YUV format, default: MJPEG (uses more cpu power)
 [-fourcc ] ............: Use FOURCC codec 'argopt', 
                          currently supported codecs are: RGB24, RGBP 
 [-timestamp ]..........: Populate frame timestamp with system time
 [-softfps] ............: Drop frames to try and achieve this fps
                          set your camera to its maximum fps to avoid stuttering
 [-timeout] ............: Timeout for device querying (seconds)
 [-dv_timings] .........: Enable DV timings queriyng and events processing
 ---------------------------------------------------------------

 Optional parameters (may not be supported by all cameras):

 [-br ].................: Set image brightness (auto or integer)
 [-co ].................: Set image contrast (integer)
 [-sh ].................: Set image sharpness (integer)
 [-sa ].................: Set image saturation (integer)
 [-cb ].................: Set color balance (auto or integer)
 [-wb ].................: Set white balance (auto or integer)
 [-ex ].................: Set exposure (auto, shutter-priority, aperature-priority, or integer)
 [-bk ].................: Set backlight compensation (integer)
 [-rot ]................: Set image rotation (0-359)
 [-hf ].................: Set horizontal flip (true/false)
 [-vf ].................: Set vertical flip (true/false)
 [-pl ].................: Set power line filter (disabled, 50hz, 60hz, auto)
 [-gain ]...............: Set gain (auto or integer)
 [-cagc ]...............: Set chroma gain control (auto or integer)
 ---------------------------------------------------------------

